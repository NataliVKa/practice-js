/**
 * –ú–∞—Å–∏–≤–∏
 *
 * - –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–∞—Å–∏–≤—É
 * - –î–æ—Å—Ç—É–ø –¥–æ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
 * - –ü–µ—Ä–µ–≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞
 * - –î–æ–≤–∂–∏–Ω–∞ –º–∞—Å–∏–≤—É
 * - –Ü–Ω–¥–µ–∫—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
 * - –ü–µ—Ä–µ–≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è
 */

//* —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–∏—Ö - –ø–µ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —è–∫–∏—Ö–æ—Å—å –¥–∞–Ω–∏—Ö –∑ –ø–µ–≤–Ω–∏–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏ —Ç–∞ –º–µ—Ç–æ–¥–∞–º–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏  –∑ —Ü–∏–º–∏ –¥–∞–Ω–∏–º–∏ —ñ –¥–æ—Å—Ç—É–ø—É –¥–æ –Ω–∏—Ö

//* –º–∞—Å–∏–≤ - —Ü–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–∏—Ö (–∑–∞–∑–≤–∏—á–∞–π –ø–æ–≤–∏–Ω–µ–Ω –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –¥–∞–Ω—ñ –æ–¥–Ω–æ–≥–æ —Ç–∏–ø—É) —è–∫–∞ –∑–±–µ—Ä—ñ–≥–∞—î –Ω–∞–±—ñ—Ä –ø–µ–≤–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å. –û—Å–Ω–æ–≤–Ω–∏–º –ø—Ä–∞–≤–∏–ª–æ–º –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —î —Ç–µ, —â–æ —É –∫–æ–∂–Ω–æ—ó –æ–¥–∏–Ω–∏—Ü—ñ —Ü–∏—Ö –¥–∞–Ω–∏—Ö –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –≤–ª–∞—Å–Ω–∏–π —ñ–Ω–¥–µ–∫—Å (—ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—è –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ 0). –¢–∞–∫–æ–∂ –º–∞—Å–∏–≤ –Ω–∞–¥–∞—î –ø–µ–≤–Ω—ñ –º–µ—Ç–æ–¥–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —Ü–∏–º–∏ –¥–∞–Ω–∏–º–∏. –î–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó –∫–æ–º—ñ—Ä–∫–∏ –¥–∞–Ω–∏—Ö –ø–æ—Ç—Ä—ñ–±–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è –ø–æ—Ä—è–¥–∫–æ–≤–∏–º –Ω–æ–º–µ—Ä–æ–º (—ñ–Ω–¥–µ–∫—Å–æ–º)

//* [] - —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –º–∞—Å–∏–≤—É, —Ç–æ–±—Ç–æ, –≤–∏–¥—ñ–ª—è—î—Ç—å—Å—è –Ω–æ–≤–∞ –∫–æ–º—ñ—Ä–∫–∞ –ø–∞–º º—è—Ç—ñ, –∫—É–¥–∏ –∑–∞–ø–∏—Å—É—î—Ç—å—Å—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ü–µ–π –º–∞—Å–∏–≤

const courses = ["HTML", "CSS", "JavaScript", "React", "PostgreSQL"];
console.table(courses);
console.log([0]);
console.log([1]);
console.log([2]);
console.log([3]);
console.log(courses);

// —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ –ø–µ–≤–Ω–æ—ó –∫–æ–º—ñ—Ä–∫–∏ –≤ –º–∞—Å–∏–≤—ñ - –º–∏ –±—É–¥–µ–º–æ –∑–≤–µ—Ä—Ç–∞—Ç–∏—Å—å –¥–æ –Ω–µ—ó –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é arrayName[index]
console.log("0:", courses[0]);
console.log("1:", courses[1]);
console.log("2:", courses[2]);
console.log("3:", courses[3]);
console.log("4:", courses[4]);
console.log("5:", courses[5]);

courses[1] = "Jacob";
courses[3] = "Adrian";
console.table(courses);

// –¥–æ–≤–∂–∏–Ω–∞ –º–∞—Å–∏–≤—É
console.log(courses.length);

const lastIndex = courses.length - 1;
// —è–∫—â–æ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–µ–Ω —ñ–Ω–¥–µ–∫—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç—É –º–∞—Å–∏–≤—É, —Ç–æ –≤–∏ –º–æ–∂–µ—Ç–µ –∑–Ω–∞–π—Ç–∏ –π–æ–≥–æ –∑–∞ —Ñ–æ—Ä–º—É–ª–æ—é –¥–æ–≤–∂–∏–Ω–∞ - 1 (—Ç–æ–º—É —â–æ —ñ–Ω–¥–µ–∫—Å–∏ –ø–æ—á–∏–Ω–∞—é—Ç—å—Å—è –∑ 0)
const lastIndex = courses.length - 1; // 5 - 1
console.log(lastIndex);

/**
 * –ü–µ—Ä–µ–¥–∞—á–∞ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º —ñ –∑–∞ –∑–Ω–∞—á–µ–Ω–Ω—è–º
 *
 * –ü—Ä–∏–º—ñ—Ç–∏–≤–∏ —ñ —Å–∫–ª–∞–¥–Ω—ñ —Ç–∏–ø–∏
 * –ü–æ—Å–∏–ª–∞–ª—å–Ω–∞ —Ä—ñ–≤–Ω—ñ—Å—Ç—å (referential equality)
 */

// –º–∞—Å–∏–≤–∏ - —Ü–µ —Å–∫–ª–∞–¥–Ω—ñ –¥–∞–Ω—ñ (—Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –¥–∞–Ω–∏—Ö), –Ω–∞ –≤—ñ–¥–º—ñ–Ω—É –≤—ñ–¥ –ø—Ä–∏–º—ñ—Ç–∏–≤—ñ–≤ –≤–æ–Ω–∏ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –Ω–µ –∑–∞ –∑–Ω–∞—á–µ–Ω–Ω—è–º, –∞ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º –Ω–∞ –∫–æ–º—ñ—Ä–∫—É –ø–∞–º º—è—Ç—ñ

// let c = 5;
// let d = c
// c = 10
// console.log(c); // 10
// console.log(d); // 5

const a = [1, 2, 3];
const b = a;
// const b = a; //! –∫–æ–ø—ñ—è –º–∞—Å–∏–≤—É —Ç–∞–∫ –Ω–µ —Ä–æ–±–∏—Ç—å—Å—è!! —Ü–µ –Ω–µ –∫–æ–ø—ñ—è, –≤–∏ –∑–±–µ—Ä–µ–≥–ª–∏ –≤ –∫–æ–Ω—Å—Ç –± –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ç–µ–π —Å–∞–º–∏–π –º–∞—Å–∏–≤, —è–∫–∏–π –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è –≤ –∞, –∞ —Ç—Ä–µ–±–∞ –±—É–ª–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π, —É —è–∫–æ–º—É –ø—Ä–æ—Å—Ç–æ –±—É–¥—É—Ç—å —Ç—ñ –∂ —Å–∞–º—ñ –¥–∞–Ω—ñ
const b = a.slice(0);
// .slice(0) - –ø–æ–≤–µ—Ä–Ω–µ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, —É —è–∫–æ–º—É –±—É–¥–µ –∫–æ–ø—ñ—è –º–∞—Å–∏–≤—É a –ø–æ—á–∏–Ω–∞—é—á–∏ –∑ —ñ–Ω–¥–µ–∫—Å—É 0, —Ç–æ–±—Ç–æ –ø–æ–≤–Ω–∞ –∫–æ–ø—ñ—è –º–∞—Å–∏–≤—É a

console.log("a", a);
console.log("b", b);

a[0] = 500;
b[2] = 300;

console.log("a", a);
console.log("b", b);

console.log(a === b);
// –º–∏ –º–æ–∂–µ–º–æ –∑—Ä–æ–±–∏—Ç–∏ –≤–∏—Å–Ω–æ–≤–æ–∫ —â–æ –∫–æ–Ω—Å –∞ —ñ –∫–æ–Ω—Å—Ç b —Ü–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –æ–¥–∏–Ω —ñ —Ç–æ–π —Å–∞–º–∏–π –º–∞—Å–∏–≤. –ß–æ–º—É? –¢–æ–º—É —â–æ –º—ñ–Ω—è—é—á–∏ –ø–µ—Ä—à–∏–π - –¥—Ä—É–≥–∏–π –∑–º—ñ–Ω—é—î—Ç—å—Å—è —Ç–µ–∂

console.log(a === b); // true - —Ç–æ–º—É —â–æ —Ü–µ –¥—ñ–π—Å–Ω–æ –æ–¥–∏–Ω —ñ —Ç–æ–π —Å–∞–º–∏–π –º–∞—Å–∏–≤

console.log([] === []);
console.log([1, 2, 3] === [1, 2, 3]);
// console.log([] === []); // false
// console.log([1, 2, 3] === [1, 2, 3]); //  false

/**
 * –ú–µ—Ç–æ–¥–∏ –º–∞—Å–∏–≤—É
 *
 * - join
 * - split
 * - slice
 * - concat
 * - indexOf
 * - push/pop
 */

const courses = ["HTML", "CSS", "JavaScript", "React", "PostgreSQL"];

//* .join(separator) - –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –Ω–∞ –º–∞—Å–∏–≤—ñ —Ç–∞ –ø—Ä–∏–π–º–∞—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä (–∑–Ω–∞–∫ —Ä–æ–∑–¥—ñ–ª—é–≤–∞—á–∞). –¶–µ–π –º–µ—Ç–æ–¥ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫ —É —è–∫–æ–º—É –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—Å–∏–≤—É –±—É–¥—É—Ç—å —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –Ω–∞—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º separator. –∑ –º–∞—Å–∏–≤—É –≤ —Ä—è–¥–æ–∫
const coursesStr = courses.join(" | ");

// console.log(`–ù–∞ –∫—É—Ä—Å—ñ –º–∏ –≤–∏–≤—á–∞—î–º–æ —Ç–∞–∫—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó: ${coursesStr}`);

//* .split(splitter) - –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –Ω–∞ —Ä—è–¥–∫—É —Ç–∞ –ø—Ä–∏–π–º–∞—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä (–∑–Ω–∞–∫ —Ä–æ–∑–¥—ñ–ª—é–≤–∞—á–∞). –ü–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –¥–µ –∫–æ–∂–µ–Ω –µ–ª–µ–º–µ–Ω—Ç –±—É–ª–æ –≤–∏–±—Ä–∞–Ω–æ –∑ —Ä—è–¥–∫–∞ –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º —Ä–æ–∑–¥—ñ–ª—é–≤–∞—á–∞ splitter. –∑ —Ä—è–¥–∫–∞ –≤ –º–∞—Å–∏–≤

const fruits = "banana, apple, melon, lemon";

const fruitsArr = fruits.split(", ");

console.log(fruitsArr);

//* .slice(start, end) - –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –∑ –∫–æ–ø—ñ—î—é –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –≤—ñ–¥ start –¥–æ end –Ω–µ –≤–∫–ª—é—á–Ω–æ –º–∞—Å–∏–≤—É –Ω–∞ —è–∫–æ–º—É –≤—ñ–Ω –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è. [start, end)

const someFruitsCopy = fruitsArr.slice(1, 3); // [1, 3) - —Ç–æ–±—Ç–æ –º–∏ —Ä–æ–±–∏–º–æ –∫–æ–ø—ñ—é –ø–æ—á–∏–Ω–∞—é—á–∏ –∑ —ñ–Ω–¥–µ–∫—Å—É 1 —ñ –∑–∞–∫—ñ–Ω—á—É—é—á–∏ –Ω–∞ —ñ–Ω–¥–µ–∫—Å—ñ 2 (—Ç–æ–º—É —â–æ 3 –Ω–µ –≤–∫–ª—é—á–∞—î—Ç—å—Å—è –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω) –≤—ñ–¥ 1 –¥–æ 3 –Ω–µ –≤–∫–ª—é—á–Ω–æ
console.log(someFruitsCopy);

// console.log(fruitsArr.slice(1));

//* .concat(...arrs) - –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ —É —è–∫–æ–º—É –∑—ñ–ª º—î –≤—Å—ñ –º–∞—Å–∏–≤–∏, —è–∫—ñ –≤–∏ –ø–µ—Ä–µ–¥–∞—î—Ç–µ –≤ —è–∫–æ—Å—Ç—ñ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ –≤ –æ–¥–∏–Ω

const moreFruits = fruitsArr.concat(
  ["watermelon", "strawberry"],
  ["kiwi", "papaya"],
  ["orange"],
  ["mango"]
);

console.log(moreFruits);

//* indexOf(value) - –ø–æ–≤–µ—Ä—Ç–∞—î —ñ–Ω–¥–µ–∫—Å –ø–µ—Ä—à–æ–≥–æ –≤—Ö–æ–¥–∂–µ–Ω–Ω—è —è–∫–µ –±—É–¥–µ —Ä—ñ–≤–Ω–∏–º –∑–Ω–∞—á–µ–Ω–Ω—é value, —è–∫—â–æ —Ç–∞–∫–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç—É –Ω–µ –∑–Ω–∞–π—à–ª–æ—Å—å - –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è -1

console.log("–Ü–Ω–¥–µ–∫—Å –ø–æ–ª—É–Ω–∏—Ü—ñ:", moreFruits.indexOf("strawberry"));
console.log("–Ü–Ω–¥–µ–∫—Å —Å–ª–∏–≤–∏:", moreFruits.indexOf("plum"));

//* .push(value) - –¥–æ–¥–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è value —É –∫—ñ–Ω–µ—Ü—å –º–∞—Å–∏–≤—É

moreFruits.push("plum", "cherry");
console.log(moreFruits);

//* .pop() - –≤–∏–¥–∞–ª—è—î –û–î–ù–ï –∑–Ω–∞—á–µ–Ω–Ω—è –∑ –∫—ñ–Ω—Ü—è –º–∞—Å–∏–≤—É

moreFruits.pop();
console.log(moreFruits);

//* .includes(value) - –ø–æ–≤–µ—Ä—Ç–∞—î true —è–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è value –∑—É—Å—Ç—Ä—ñ—á–∞—î—Ç—å—Å—è —É –º–∞—Å–∏–≤—ñ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î false, —è–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è value —É –º–∞—Å–∏–≤—ñ –Ω–µ–º–∞—î

console.log("–ß–∏ —î —Ç–∞–∫–∏–π —Ñ—Ä—É–∫—Ç —è–∫ –æ–≥—ñ—Ä–æ–∫?", moreFruits.includes("cucumber"));
console.log("–ß–∏ —î —Ç–∞–∫–∏–π —Ñ—Ä—É–∫—Ç —è–∫ —è–±–ª—É–∫–æ?", moreFruits.includes("apple"));

/**
 * –Ü—Ç–µ—Ä–∞—Ü—ñ—è –ø–æ –º–∞—Å–∏–≤—É
 *
 * - –Ü—Ç–µ—Ä–∞—Ü—ñ—è –ø–æ –º–∞—Å–∏–≤—É —Ü–∏–∫–ª–æ–º for
 * - –ú–µ—Ç–æ–¥ includes
 * - –¶–∏–∫–ª for...of
 * - –†—ñ–∑–Ω–∏—Ü—è —É –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—ñ for –∏ for...of
 */

const friends = ["Mango", "Kiwi", "Poly", "Ajax"];
console.table(friends);

for (let i = 0; i < friends.length; i += 1) {
  friends[i] += `-${i}`;
}
// console.table(friends);

console.table(friends);
// for (let i = 0; i < friends.length; i += 1) {
//   friends[i] += `-${i}`;
//   console.log(i, friends[i]);
// }

for (let friend of friends) {
  console.log(friend);
  console.log(friends);
}
// console.table(friends);

// –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç–æ–¥—ñ, –∫–æ–ª–∏ –Ω–∞–º –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ —ñ–Ω–¥–µ–∫—Å–∞–º–∏ —É —Ü–∏–∫–ª—ñ, –ø–µ—Ä–µ–±–∏—Ä–∞—î–º–æ –≤—ñ–¥—Ä–∞–∑—É –¥–∞–Ω—ñ. –°–∞–º —Ü–∏–∫–ª —Ñ–æ—Ä –æ—Ñ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –¥–ª—è —Ç–æ–≥–æ —â–æ–± –ø–µ—Ä–µ–±—Ä–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–∞–±–æ—Ä—É –¥–∞–Ω–∏—Ö
// for (const friend of friends) {
//   console.log(friend);
// }

/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏,
 * –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —É –∑–º—ñ–Ω–Ω—ñ–π values —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞.
 * –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º.
 */

const values = "8 11";

function calculateRecSquare(values) {
  /*
  1. –≤–∏—Ç—è–≥–Ω—É—Ç–∏ –∑ —Ä—è–¥–∫–∞ –æ–∫—Ä–µ–º–æ —à–∏—Ä–∏–Ω—É —ñ –æ–∫—Ä–µ–º–æ –≤–∏—Å–æ—Ç—É, —Ü–µ –º–æ–∂–Ω–∞ –∑—Ä–æ–±–∏—Ç–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É split(" ")
  2. –æ—Å–∫—ñ–ª—å–∫–∏ —Ü–µ —Ä—è–¥–æ–∫, –∞ –Ω–∞–º —Ç—Ä–µ–±–∞ —Ä–æ–±–∏—Ç–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–Ω—ñ –æ–±—á–∏–ª–µ–Ω–Ω—è - –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–∞ —á–∏—Å–ª–∞ Number()
  3. –æ–±—á–∏—Å–ª–∏—Ç–∏ –ø–ª–æ—â—É (–ø–æ–≤–µ—Ä–Ω—É—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—á–∏—Å–ª–µ–Ω—å)
  */

  const sides = values.split(" ");
  const width = Number(sides[0]);
  const height = Number(sides[1]);

  return width * height;
}

// console.log(calculateRecSquare(values));

/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É fruits.
 * –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫
 * —É —Ñ–æ—Ä–º–∞—Ç—ñ –Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞.
 * –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.
 */

const fruits = ["üçé", "üçá", "üçë", "üçå", "üçã"];
/*
1: üçé
2: üçá
3: üçë
4: üçå
5: üçã
*/

// for (let i = 0; i < fruits.length; i += 1) {
//   console.log(`${i + 1}: ${fruits[i]}`);
// }

/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –ø—ñ–¥—Ä–∞—Ö–æ–≤—É—î —Å—É–º—É –≤—Å—ñ—Ö –ø–∞—Ä–Ω–∏—Ö —á–∏—Å–µ–ª —É –º–∞—Å–∏–≤—ñ.
 */

const numbers = [1, 5, 8, 9, 12, 4, 15, 27, 30, 18, 14];
let total = 0;
// const numbers = [1, 5, 2, 8, 9, 12, 4, 15, 27, 30, 18, 14];
// let total = 0;

// for (const number of numbers) {
//   if (number % 2 === 0) {
//     total += number;
//   }
// }

// console.log(total);

/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
 * –£ –∑–º—ñ–Ω–Ω–∏—Ö names —Ç–∞ phones –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤,
 * —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö –≤–∫–∞–∑—É—é—Ç—å –Ω–∞
 * –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.
 */
const names = "Jacob,William,Solomon,Artemis";
const phones = "89001234567,89001112233,890055566377,890055566300";

function displayPhoneBook(names, phones) {
  /*
    1. –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ —ñ–º–µ–Ω–∞ —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∏ –Ω–∞ –¥–≤–∞ –º–∞—Å–∏–≤–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é split(",")
    2. –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —Ü–∏–∫–ª for –º–∏ –ø–µ—Ä–µ–±–µ—Ä–µ–º–æ –±—É–¥—å-—è–∫–∏–π –º–∞—Å–∏–≤
    3. –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —à–∞–±–ª–æ–Ω–Ω–æ–≥–æ —Ä—è–¥–∫–∞ —Å—Ñ–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ –∑—Ä–æ–±–∏–º–æ –≤–∏–≤—ñ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
    */

  const namesArr = names.split(",");
  const phonesArr = phones.split(",");

  // –æ—Å–∫—ñ–∫–ª—å–∫–∏ –º–∞—Å–∏–≤–∏ –æ–¥–Ω–∞–∫–æ–≤–æ—ó –¥–æ–≤–∂–∏–Ω–∏ (4), –º–∏ —Ä–æ–±–∏–º–æ 4 —ñ—Ç–µ—Ä–∞—Ü—ñ—ó —Ü–∏–∫–ª—É. –í —Ç—ñ–ª—ñ —Ü–∏–∫–ª—É –º–∏ –∑–≤–µ—Ä—Ç–∞—î–º–æ—Å—å —ñ –¥–æ –º–∞—Å–∏–≤—É —ñ–º–µ–Ω —ñ –¥–æ –º–∞—Å–∏–≤—É –Ω–æ–º–µ—Ä—ñ–≤ –ø–æ –æ–¥–Ω–∞–∫–æ–º–æ–º—É —ñ–Ω–¥–µ–∫—Å—É (–≤—ñ–¥ 0 –¥–æ 3)

  for (let i = 0; i < namesArr.length; i += 1) {
    console.log(i);
    console.log(`${namesArr[i]}: ${phonesArr[i]}`);
  }
}

// displayPhoneBook(names, phones);

/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —É—Å—ñ —Å–ª–æ–≤–∞ —Ä—è–¥–∫–∞
 * –∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ —ñ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ. –†–µ–∑—É–ª—å—Ç—É—é—á–∏–π —Ä—è–¥–æ–∫ –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è
 * –∞–±–æ –∑–∞–∫—ñ–Ω—á—É–≤–∞—Ç–∏—Å—è —Å–∏–º–≤–æ–ª –ø—Ä–æ–±—ñ–ª—É.
 * –°–∫—Ä–∏–ø—Ç –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ —Ä—è–¥–∫–∞.
 */

const string = "Welcome to the future";
const string = "Welcome to the future"; // "to the"

function getMiddleString(string) {
  // 1. –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ —Ä–µ—á–µ–Ω–Ω—è –Ω–∞ –º–∞—Å–∏–≤ —Å–ª—ñ–≤ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é split(" ")
  // 2. –ó–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É slice —Ä–æ–±–∏–º–æ –∫–æ–ø—ñ—é –º–∞—Å–∏–≤—É –±–µ–∑ 1 —ñ –±–µ–∑ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç—É
  // 3. –ó–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É join(" ") –ø–æ—î–¥–Ω—É—î–º–æ –º–∞—Å–∏–≤ –Ω–∞–∑–∞–¥ —É —Ä—è–¥–æ–∫ —ñ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –º–µ—Ç–æ–¥ trim
  // 4. –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ñ—É–∫–Ω—Ü—ñ—ó

  // "     welcome to the     ".trim() -> "welcome to the".split(" ") -> ["welcome", "to", "the"]

  const arrOfWords = string.trim().split(" ");
  const resultArr = arrOfWords.slice(1, -1); // —Ä–æ–±–∏–º–æ –∫–æ–ø—ñ—é –∑ –¥—Ä—É–≥–æ–≥–æ —Å–ª–æ–≤–∞ –¥–æ –ø–µ—Ä–µ–¥–æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ
  const result = resultArr.join(" ").trim();
  return result;
}

// console.log(getMiddleString(string));

/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ—à—É–∫—É –Ω–∞–π–º–µ–Ω—à–æ–≥–æ —á–∏—Å–ª–∞ —É –º–∞—Å–∏–≤—ñ. –ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏
 * –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ –º–∞—Å–∏–≤—É —á–∏—Å–µ–ª. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–∏–∫–ª –¥–ª—è —Ä–æ–∑–≤'—è–∑–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ.
 */

const values = [2, 17, 94, 1, 23, 37];
let min;
console.log(min); // 1
const values = [25, 17, 94, 5, 23, 3, 37];

function findMinInArr(numbers) {
  /*
    1. —Å—Ç–≤–æ—Ä—é—î–º–æ –∑–º—ñ–Ω–Ω—É –º—ñ–Ω –∫—É–¥–∏ –∑–∞–ø–∏—à–µ–º–æ –ø–µ—Ä—à–µ –∑–Ω–∞—á–µ–Ω–Ω—è –º–∞—Å–∏–≤—É
    2. –∑–∞–ø—É—Å–∫–∞—î–º–æ —Ü–∏–∫–ª –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç—É –º–∞—Å–∏–≤—É
        2.1. —Ä–æ–±–∏–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É, —è–∫—â–æ –ø–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –º–∞—Å–∏–≤—É –º–µ–Ω—à–µ –∑–∞ –Ω–∞—à–µ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–µ, —Ç–æ –ø–æ—Ç–æ—á–Ω–µ —Å—Ç–∞–Ω–µ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–º
    3. –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
    */

  let min = numbers[0];

  for (const number of numbers) {
    if (number < min) {
      // —è–∫—â–æ –ø–æ—Ç–æ—á–Ω–µ –º–µ–Ω—à–µ –∑–∞ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–µ, —Ç–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–µ —Å—Ç–∞–Ω–µ –ø–æ—Ç–æ—á–Ω–∏–º
      min = number;
    }
  }

  return min;
}

console.log(findMinInArr(values));

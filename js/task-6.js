/**
 * –ü—Å–µ–≤–¥–æ–º–∞—Å–∏–≤ arguments –∏ Array.from
 */

function foo() {
  console.log(arguments);
//* –ø—Å–µ–≤–¥–æ–º–∞—Å–∏–≤ - —Ü–µ –∑–≤–∏—á–∞–π–Ω–∏–π –º–∞—Å–∏–≤ (—Ç–æ–±—Ç–æ, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–∏—Ö –¥–µ –∑–Ω–∞—á–µ–Ω–Ω—è —Ä–æ–∑–¥—ñ–ª—é—é—Ç—å—Å—è –∫–æ–º–∞–º–∏ —Ç–∞ –∫–æ–∂–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –º–∞—î —Å–≤—ñ–π —ñ–Ω–¥–µ–∫—Å), –∞–ª–µ –≤ –Ω—å–æ–º—É –Ω–µ–º–∞—î –º–µ—Ç–æ–¥—ñ–≤ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –º–∞—Å–∏–≤–æ–º (push, pop —ñ —Ç–¥)

//* arguments - —Ü–µ –ª–æ–∫–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞, —è–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ–π. –í –Ω—ñ–π –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è –ø—Å–µ–≤–¥–æ–º–∞—Å–∏–≤ —É—Å—ñ—Ö –∞—Ä–≥—É–º–∞–Ω—Ç—ñ–≤ —è–∫—ñ –≤–∏ –ø–µ—Ä–µ–¥–∞–ª–∏ –ø—ñ–¥ —á–∞—Å –≤–∏–∫–ª–∏–∫—É —Ü—ñ—î—ó —Ñ—É–Ω–∫—Ü—ñ—ó

//* Array.from() - —Ü–µ –º–µ—Ç–æ–¥ —è–∫–∏–π –ø—Ä–∏–π–º–∞—î –±—É–¥—å-—è–∫—É —ñ—Ç–µ—Ä–∞–±–µ–ª—å–Ω—É —Å—É—Ç–Ω—ñ—Å—Ç—å —Ç–∞ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î —ó—ó –Ω–∞ –∑–≤–∏—á–∞–π–Ω–∏–π –º–∞—Å–∏–≤ (–ø–æ–≤–µ—Ä—Ç–∞—é—á–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤). –í—ñ–Ω –Ω–∞–º –∑–Ω–∞–¥–æ–±–∏—Ç—å—Å—è —â–æ–± –ø–µ—Ä–µ—Ç–≤–æ—Ä–∏—Ç–∏ –ø—Å–µ–≤–¥–æ–º–∞—Å–∏–≤ arguments –Ω–∞ –∑–≤–∏—á–∞–π–Ω–∏–π –º–∞—Å–∏–≤ (—Ç—ñ–ª—å–∫–∏ –≤ —Ä–∞–∑—ñ —Ç–æ–≥–æ, —è–∫—â–æ –Ω–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –º–µ—Ç–æ–¥–∏ –º–∞—Å–∏–≤—ñ–≤, –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫ —Ä–æ–±–∏—Ç–∏ —Ü–µ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ).

function fn() {
  console.log(arguments); // —è–∫—â–æ –º–∏ –Ω–µ –∑–Ω–∞—î–º–æ —Ç–æ—á–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤, —è–∫–∞ –ø—Ä–∏–π–¥–µ —É —Ñ—É–Ω–∫—Ü—ñ—é, –Ω–∞–º –¥–æ–ø–æ–º–æ–∂–µ —Ü—è –ª–æ–∫–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞, —è–∫–∞ –∑–±–µ—Ä–µ —É—Å—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ —É –ø—Å–µ–≤–¥–æ–º–∞—Å–∏–≤

  const args = Array.from(arguments);
  console.log(args);
}

fn(1, 2, 3);
fn(1, 2, 3, 4, 5);
fn(1, 2, 3, 4, 5, 6, 7);
// fn(1, 2, 3);
// fn(1, 2, 3, 4, 5);
// fn(1, 2, 3, 4, 5, 6, 7);

/**
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é add –¥–ª—è —Å–∫–ª–∞–¥–∞–Ω–Ω—è –¥–æ–≤—ñ–ª—å–Ω–æ—ó
 * –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ (—á–∏—Å–µ–ª)
 */

const add = function (arguments) {
  const args = Array.from(arguments);
  let total = 0;

  for (const arg of args) {
    total += arg;
  }
// function add() {
//   let sum = 0;
//   for (let i = 0; i < arguments.length; i += 1) {
//     sum += arguments[i];
//   }

  return total;
};
//   return sum;
// }

console.log(add(1, 2, 3));
console.log(add(1, 2, 4, 5, 6));
// console.log(add(1, 2, 3));
// console.log(add(1, 2, 4, 5, 6));
// console.log(add(59, 73, -5, 8));

/**
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é calAverage() —è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–æ–≤—ñ–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å
 * –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —ó—Ö–Ω—î —Å–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è. –£—Å—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏
 * –±—É–¥—É—Ç—å –ª–∏—à–µ —á–∏—Å–ª–∞–º–∏.
 */
function calAverage() {}

console.log(calAverage(1, 2, 3, 4)); // 2.5
console.log(calAverage(14, 8, 2)); // 8
console.log(calAverage(27, 43, 2, 8, 36)); // 23.2
// function calAverage() {
//   let sum = 0;
//   for (let i = 0; i < arguments.length; i += 1) {
//     sum += arguments[i];
//   }

//   return sum / arguments.length;
// }

// console.log(calAverage(1, 2, 3, 4)); // 2.5
// console.log(calAverage(14, 8, 2)); // 8
// console.log(calAverage(27, 43, 2, 8, 36)); // 23.2

    
    

    /**
 * - –ì–ª–æ–±–∞–ª—å–Ω–∞ –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—ñ
 * - –ë–ª–æ—á–Ω–∞ –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—ñ
 * - –ü–æ—à—É–∫ –∑–∞ –ª–∞–Ω—Ü—é–∂–∫–æ–º –æ–±–ª–∞—Å—Ç–µ–π –≤–∏–¥–∏–º–æ—Å—Ç—ñ
 */

const globalValue = 10;

console.log(globalValue); // 10
console.log(globalValue);

function foo() {
  const a = 20;
  console.log(a); // 20
  console.log(globalValue); // 10
  console.log(a);
  console.log(globalValue);

  for (let i = 0; i < 5; i += 1) {
    console.log(a); // 20
    console.log(globalValue); // 10
    console.log(a);
    console.log(globalValue);

    if (i === 2) {
      console.log(a); // 20
      console.log(globalValue); // 10
      console.log(a);
      console.log(globalValue);
    }
  }
}

// ‚ùå –ü–æ–º–∏–ª–∫–∞! –ó–º—ñ–Ω–Ω–∞ a –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Ü—ñ–π –æ–±–ª–∞—Å—Ç—ñ –≤–∏–¥–∏–º–æ—Å—Ç—ñ
console.log(a);

for (let i = 0; i < 3; i += 1) {
  // ‚ùå –ü–æ–º–∏–ª–∫–∞! –ó–º—ñ–Ω–Ω–∞ a –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Ü—ñ–π –æ–±–ª–∞—Å—Ç—ñ –≤–∏–¥–∏–º–æ—Å—Ç—ñ
  console.log(a);
    }
    

    /**
 * - –°—Ç–µ–∫ –≤–∏–∫–ª–∏–∫—ñ–≤
 * - –ü–æ—Ä—è–¥–æ–∫ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
 */

function fnA() {
  console.log("fnA execution");
}
// * –°—Ç–µ–∫ - —Ü–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–∏—Ö, —è–∫–∞ –ø—Ä–∞—Ü—é—î –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É –ø–µ—Ä—à–∏–π —É–≤—ñ–π—à–æ–≤ - –æ—Å—Ç–∞–Ω–Ω—ñ–º –≤–∏–π—à–æ–≤ (FILO). –ú–æ–∂–Ω–∞ —É—è–≤–ª—è—Ç–∏ —Å—Ç–µ–∫ —è–∫ –¥–∏—Ç—è—á—É –ø—ñ—Ä–∞–º—ñ–¥–∫—É –∑ –∫—ñ–ª—å—Ü—è–º–∏ - –¥–æ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∫—ñ–ª—å—Ü—è –º–æ–∂–Ω–∞ –¥—ñ—Å—Ç–∞—Ç–∏—Å—å, —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –∑–∞–±—Ä–∞—Ç–∏ –≤—Å—ñ –∫—ñ–ª—å—Ü—è –Ω–∞–¥ –Ω–∏–º.

function fnB() {
  console.log("fnB execution");
function a() {
  b();
  console.log("a");
}

function fnC() {
  console.log("fnC execution");
function b() {
  c();
  console.log("b");
}

console.log("Before fnA execution");
fnA();
console.log("After fnA execution");

console.log("Before fnB execution");
fnB();
console.log("After fnB execution");
function c() {
  console.log("c");
}

console.log("Before fnC execution");
fnC();
console.log("After fnC execution");
            a();

    
    
    
    /**
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é logItems(items), —è–∫–∞ –æ—Ç—Ä–∏–º—É—î –º–∞—Å–∏–≤ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ü–∏–∫–ª,
 * —è–∫–∏–π –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –±—É–¥–µ –≤–∏–≤–æ–¥–∏—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É
 * —Ñ–æ—Ä–º–∞—Ç—ñ <–Ω–æ–º–µ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞> - <–∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞>. –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
 * –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.
 *
 * –ù–∞–ø—Ä–∏–∫–ª–∞–¥ –¥–ª—è –ø–µ—Ä—à–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É ['Mango', 'Poly', 'Ajax'] –∑
 * —ñ–Ω–¥–µ–∫—Å–æ–º 0 –±—É–¥–µ –≤–∏–≤–µ–¥–µ–Ω–æ 1 - Mango, –∞ –¥–ª—è —ñ–Ω–¥–µ–∫—Å—É 2 –≤–∏–≤–µ–¥–µ 3 - Ajax.
 */

function logItems(items) {}
function logItems() {
  for (let i = 0; i < arguments.length; i += 1) {
    console.log(`${i + 1} - ${arguments[i]}`);
  }
}

logItems(["Mango", "Poly", "Ajax"]);
logItems(["üçé", "üçá", "üçë", "üçå", "üçã"]);
// logItems("Mango", "Poly", "Ajax");
// logItems("üçé", "üçá", "üçë", "üçå", "üçã");

/**
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é printInfo(names, phones) —è–∫–∞ –≤–∏–≤–æ–¥–∏—Ç—å
 * —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –£ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
 * names —Ç–∞ phones –±—É–¥—É—Ç—å –ø–µ—Ä–µ–¥–∞–Ω—ñ —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤,
 * —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö
 * –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤
 * –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.
 */

function printInfo(names, phones) {}
function displayPhoneBook(names, phones) {
  /*
    1. –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ —ñ–º–µ–Ω–∞ —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∏ –Ω–∞ –¥–≤–∞ –º–∞—Å–∏–≤–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é split(",")
    2. –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —Ü–∏–∫–ª for –º–∏ –ø–µ—Ä–µ–±–µ—Ä–µ–º–æ –±—É–¥—å-—è–∫–∏–π –º–∞—Å–∏–≤
    3. –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —à–∞–±–ª–æ–Ω–Ω–æ–≥–æ —Ä—è–¥–∫–∞ —Å—Ñ–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ –∑—Ä–æ–±–∏–º–æ –≤–∏–≤—ñ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
    */

printInfo(
  "Jacob,William,Solomon,Artemis",
  "89001234567,89001112233,890055566377,890055566300"
);
  const namesArr = names.split(",");
  const phonesArr = phones.split(",");

  // –æ—Å–∫—ñ–∫–ª—å–∫–∏ –º–∞—Å–∏–≤–∏ –æ–¥–Ω–∞–∫–æ–≤–æ—ó –¥–æ–≤–∂–∏–Ω–∏ (4), –º–∏ —Ä–æ–±–∏–º–æ 4 —ñ—Ç–µ—Ä–∞—Ü—ñ—ó —Ü–∏–∫–ª—É. –í —Ç—ñ–ª—ñ —Ü–∏–∫–ª—É –º–∏ –∑–≤–µ—Ä—Ç–∞—î–º–æ—Å—å —ñ –¥–æ –º–∞—Å–∏–≤—É —ñ–º–µ–Ω —ñ –¥–æ –º–∞—Å–∏–≤—É –Ω–æ–º–µ—Ä—ñ–≤ –ø–æ –æ–¥–Ω–∞–∫–æ–º–æ–º—É —ñ–Ω–¥–µ–∫—Å—É (–≤—ñ–¥ 0 –¥–æ 3)

  for (let i = 0; i < namesArr.length; i += 1) {
    console.log(`${namesArr[i]}: ${phonesArr[i]}`);
  }
}

// displayPhoneBook(
//   "Jacob,William,Solomon,Artemis",
//   "89001234567,89001112233,890055566377,890055566300"
// );

/**
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é formatTime(minutes) —è–∫–∞ –ø–µ—Ä–µ–≤–µ–¥–µ –∑–Ω–∞—á–µ–Ω–Ω—è
 * minutes (–∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ö–≤–∏–ª–∏–Ω) —É —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ –≥–æ–¥–∏–Ω
 * —Ç–∞ —Ö–≤–∏–ª–∏–Ω HH:MM.
 */

function formatTime(minutes) {}
function formatTime(totalMinutes) {
/*
 1. –≤–∏—Ç—è–≥—É—î–º–æ –≥–æ–¥–∏–Ω–∏ –∑ —Ö–≤–∏–ª–∏–Ω, –¥–ª—è —Ü—å–æ–≥–æ minutes/60. –û—Å–∫—ñ–ª—å–∫–∏ —Ü–µ –Ω–µ —Ü—ñ–ª–µ —á–∏—Å–ª–æ, –æ–∫—Ä—É–≥–ª—é—î–º–æ –π–æ–≥–æ –≤–Ω–∏–∑ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É Math.floor()
 2. –≤–∏—Ç—è–≥–Ω—É—Ç–∏ —Ö–≤–∏–ª–∏–Ω–∏ –∑ –æ—Å—Ç–∞—á—ñ, –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –æ—Å—Ç–∞—á—ñ –≤—ñ–¥ –¥—ñ–ª–µ–Ω–Ω—è, –±–µ—Ä–µ–º–æ minutes % 60
 3. –ó–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É .padStart(2, 0) –∑–∞–ø–æ–≤–Ω—é—î–º–æ –ø–æ—á–∞—Ç–æ–∫ —Ä—è–¥–∫–∞ –Ω—É–ª—è–º–∏ –ø–æ–∫–∏ –¥–æ–≤–∂–∏–Ω–∞ –Ω–µ —Å—Ç–∞–Ω–µ 2
 4. –ó–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —à–∞–±–ª–æ–Ω–Ω–æ–≥–æ —Ä—è–¥–∫–∞ –ø—Ä–∏–≤–µ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–æ –≤–∏–≥–ª—è–¥—É HH:MM
*/
  const hours = Math.floor(totalMinutes / 60);
  const minutes = totalMinutes % 60;

  const doubleDigitHours = String(hours).padStart(2, 0);
  const doubleDigitMinutes = String(minutes).padStart(2, 0);

  return `${doubleDigitHours}:${doubleDigitMinutes}`;
}

console.log(formatTime(70)); // "01:10"
console.log(formatTime(450)); // "07:30"
console.log(formatTime(1441)); // "24:01"
console.log(formatTime(5379)); // "89:39"
console.log(formatTime(15379)); // "256:19"

//* .padStart(maxLength, char) - –º–µ—Ç–æ–¥, —è–∫–∏–π –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –Ω–∞ —Ä—è–¥–æ—á–∫—É —Ç–∞ –ø—Ä–∏–π–º–∞—î –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É –¥–æ–≤–∂–∏–Ω—É —Ä—è–¥–∫–∞ —ñ —Å–∏–º–≤–æ–ª –¥–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è. –¶–µ–π –º–µ—Ç–æ–¥ –∑–∞–ø–æ–≤–Ω—é—î –ø–æ—á–∞—Ç–æ–∫ —Ä—è–¥–∫—É —Å–∏–º–≤–æ–ª–∞–º–∏ char –¥–æ —Ç–∏—Ö –ø—ñ—Ä, –ø–æ–∫–∏ –¥–æ–≤–∂–∏–Ω–∞ —Ä—è–¥–∫—É –Ω–µ —Å—Ç–∞–Ω–µ maxLength

//* .padEnd(maxLength, char) - –º–µ—Ç–æ–¥, —è–∫–∏–π –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –Ω–∞ —Ä—è–¥–æ—á–∫—É —Ç–∞ –ø—Ä–∏–π–º–∞—î –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É –¥–æ–≤–∂–∏–Ω—É —Ä—è–¥–∫–∞ —ñ —Å–∏–º–≤–æ–ª –¥–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è. –¶–µ–π –º–µ—Ç–æ–¥ –∑–∞–ø–æ–≤–Ω—é—î –∫—ñ–Ω–µ—Ü—å —Ä—è–¥–∫—É —Å–∏–º–≤–æ–ª–∞–º–∏ char –¥–æ —Ç–∏—Ö –ø—ñ—Ä, –ø–æ–∫–∏ –¥–æ–≤–∂–∏–Ω–∞ —Ä—è–¥–∫—É –Ω–µ —Å—Ç–∞–Ω–µ maxLength

    
    
